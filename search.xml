<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>meta-spark</title>
      <link href="/2024/04/04/meta-spark/"/>
      <url>/2024/04/04/meta-spark/</url>
      
        <content type="html"><![CDATA[<h2 id="步驟"><a href="#步驟" class="headerlink" title="步驟"></a>步驟</h2><ol><li><p>準備工作</p><ol><li>安裝 MetaSpark Studio  <ul><li>前往 MetaSpark 官方網站: <a href="https://spark.meta.com/">https://spark.meta.com/</a> 下載 MetaSpark Studio。</li><li>依照安裝指示完成安裝。</li></ul></li><li>下載臉部模板  <ul><li>前往 MetaSpark 官方教學: <a href="https://spark.meta.com/learn/articles/fundamentals/templates/">https://spark.meta.com/learn/articles/fundamentals/templates/</a>。</li><li>下載需要的臉部模板。</li></ul></li><li>準備素材  <ul><li>準備好要使用的素材，例如圖片、GIF 動畫、3D 模型等。</li></ul></li></ol></li><li><p>製作特效</p><ol><li>建立專案  <ul><li>打開 MetaSpark Studio。</li><li>點擊 File &gt; New &gt; Project。</li><li>在 Project Name 欄位輸入專案名稱。</li><li>點擊 Create。</li></ul></li><li>加入 Face Tracker  <ul><li>在 Scene 檢視窗中，點擊 Hierarchy 面板的 Create 按鈕。</li><li>選擇 AR &gt; Face Tracker。</li><li>將 Face Tracker 拖曳到 Scene 檢視窗中。</li></ul></li><li>加入 Face Mesh  <ul><li>在 Scene 檢視窗中，點擊 Hierarchy 面板的 Create 按鈕。</li><li>選擇 Mesh &gt; Face Mesh。</li><li>將 Face Mesh 拖曳到 Scene 檢視窗中。</li></ul></li><li>加入 Plane  <ul><li>在 Scene 檢視窗中，點擊 Hierarchy 面板的 Create 按鈕。</li><li>選擇 3D Object &gt; Plane。</li><li>將 Plane 拖曳到 Scene 檢視窗中。</li></ul></li></ol></li><li><p>應用特效</p><ol><li>簡單的圖片特效  <ul><li>將圖片拖曳到 Plane 的 Material 屬性中的 Albedo 貼圖欄位。</li><li>調整 Plane 的大小和位置。</li><li>在 Material 檢視窗中，調整圖片的材質屬性，例如透明度、顏色等。</li></ul></li><li>動畫特效  <ul><li>將 GIF 動畫拖曳到 Plane 的 Material 屬性中的 Albedo 貼圖欄位。</li><li>在 Material 檢視窗中，點擊 Shader 屬性中的 Edit 按鈕。</li><li>在 Shader 編輯器中，找到 Main 函數。</li><li>在 Main 函數中添加以下程式碼：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 播放動畫</span><br><span class="line">_MainTex.uv.y += Time.deltaTime * _AnimSpeed;</span><br></pre></td></tr></table></figure></li><li>將 _AnimSpeed 屬性設為動畫的播放速度。</li></ul></li><li>3D 模型特效  <ul><li>將 3D 模型匯入到 MetaSpark Studio。</li><li>將 3D 模型拖曳到 Scene 檢視窗中。</li><li>調整 3D 模型的大小和位置。</li><li>在 Material 檢視窗中，設定 3D 模型的材質屬性，例如顏色、紋理等。</li></ul></li></ol></li><li><p>發布特效</p><ol><li>上傳特效  <ul><li>在 Meta Studio 中登入您的 Facebook 帳號。</li><li>點擊 Create &gt; Spark AR Effect。</li><li>在 Effect Name 欄位輸入特效名稱。</li><li>在 Description 欄位輸入特效描述。</li><li>在 Categories 欄位選擇特效類別。</li><li>將 Spark AR 專案匯出為 .zip 檔案。</li><li>將 .zip 檔案上傳到 Meta Studio。</li></ul></li><li>填寫資訊  <ul><li>在 Effect Name 欄位輸入特效名稱。</li><li>在 Description 欄位輸入特效描述。</li><li>在 Tags 欄位輸入特效標籤。</li><li>在 Thumbnail 欄位上傳特效縮圖。</li></ul></li><li>提交審核  <ul><li>點擊 Submit for Review。</li><li>IG 團隊會在 24 小時內審核你的特效。</li></ul></li></ol></li></ol><h2 id="作品"><a href="#作品" class="headerlink" title="作品:"></a>作品:</h2><img src="/2024/04/04/meta-spark/image.png" class="" title="作品"><img src="/2024/04/04/meta-spark/image2.png" class="" title="QR">]]></content>
      
      
      <categories>
          
          <category> AR </category>
          
      </categories>
      
      
        <tags>
            
            <tag> meta spark </tag>
            
            <tag> AR/VR </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>youtube-summary</title>
      <link href="/2024/04/04/youtube-summary/"/>
      <url>/2024/04/04/youtube-summary/</url>
      
        <content type="html"><![CDATA[<h1 id="youtube摘要"><a href="#youtube摘要" class="headerlink" title="youtube摘要"></a>youtube摘要</h1><h2 id="輸入影片網址即可摘要內容"><a href="#輸入影片網址即可摘要內容" class="headerlink" title="輸入影片網址即可摘要內容"></a>輸入影片網址即可摘要內容</h2><p><a href="https://github.com/Timtimtimchen/youtube-embedding-Summary">專案程式碼</a></p><p><em><strong>如要使用請在上方網址’github’後面加上’tocolab’</strong></em></p>]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> embedding </tag>
            
            <tag> youtube </tag>
            
            <tag> pinecone </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>video-retalking-RVC-BossGPT-SoVITS</title>
      <link href="/2024/04/04/video-retalking-RVC-BossGPT-SoVITS/"/>
      <url>/2024/04/04/video-retalking-RVC-BossGPT-SoVITS/</url>
      
        <content type="html"><![CDATA[<h1 id="RVC-Boss-GPT-SoVITS-語音合成模型"><a href="#RVC-Boss-GPT-SoVITS-語音合成模型" class="headerlink" title="RVC-Boss&#x2F;GPT-SoVITS 語音合成模型"></a>RVC-Boss&#x2F;GPT-SoVITS 語音合成模型</h1><p><a href="https://github.com/Timtimtimchen/video-retalking-RVC-BossGPT-SoVITS"><strong>程式碼網址</strong></a></p><h2 id="1-初始執行畫面"><a href="#1-初始執行畫面" class="headerlink" title="1.初始執行畫面"></a>1.初始執行畫面</h2><img src="/2024/04/04/video-retalking-RVC-BossGPT-SoVITS/A.png" class="" title="image"><h2 id="2-把音檔放進檔案根目錄"><a href="#2-把音檔放進檔案根目錄" class="headerlink" title="2.把音檔放進檔案根目錄"></a>2.把音檔放進檔案根目錄</h2><img src="/2024/04/04/video-retalking-RVC-BossGPT-SoVITS/b.png" class="" title="image"><h2 id="3-設定變數"><a href="#3-設定變數" class="headerlink" title="3.設定變數"></a>3.設定變數</h2><h4 id="1-過濾人聲音"><a href="#1-過濾人聲音" class="headerlink" title="1.過濾人聲音"></a>1.過濾人聲音</h4><h4 id="2-分割音檔"><a href="#2-分割音檔" class="headerlink" title="2.分割音檔"></a>2.分割音檔</h4><h4 id="3-音檔位置"><a href="#3-音檔位置" class="headerlink" title="3.音檔位置"></a>3.音檔位置</h4><img src="/2024/04/04/video-retalking-RVC-BossGPT-SoVITS/C.png" class="" title="image"><h2 id="4-分割音檔合成list"><a href="#4-分割音檔合成list" class="headerlink" title="4.分割音檔合成list"></a>4.分割音檔合成list</h2><p>list位置在框內位置 可自訂</p><img src="/2024/04/04/video-retalking-RVC-BossGPT-SoVITS/D.png" class="" title="image"><h2 id="5-Speech-to-text-proofreading-tool"><a href="#5-Speech-to-text-proofreading-tool" class="headerlink" title="5.Speech to text proofreading tool"></a>5.Speech to text proofreading tool</h2><img src="/2024/04/04/video-retalking-RVC-BossGPT-SoVITS/e.png" class="" title="image"><h2 id="6-終端給WebUI網址"><a href="#6-終端給WebUI網址" class="headerlink" title="6.終端給WebUI網址"></a>6.終端給WebUI網址</h2><p>確認沒問題就可關閉網頁</p><h2 id="7-第二個頁面-1-gtp-sovits-TTS"><a href="#7-第二個頁面-1-gtp-sovits-TTS" class="headerlink" title="7.第二個頁面(1-gtp-sovits-TTS)"></a>7.第二個頁面(1-gtp-sovits-TTS)</h2><img src="/2024/04/04/video-retalking-RVC-BossGPT-SoVITS/f.png" class="" title="image"><p>設置實驗名也就是模型名，不要有中文！然後第一個輸入的是標註文件路徑，注意是文件路徑！示例：&#x2F;content&#x2F;GPT-SoVITS&#x2F;output&#x2F;asr_opt&#x2F;slicer_opt.list 注意後面的文件名必須要輸進去！打不開就再三檢查路徑是否正確！必須要有.list的後綴！！！第二個輸入的是切分音頻文件夾路徑 示例：&#x2F;content&#x2F;GPT-SoVITS&#x2F;output&#x2F;slicer_opt。注意複製的路徑都不能有引號！！！千萬不能有引號！然後點一鍵三連。結束 &#x2F;content&#x2F;GPT-SoVITS&#x2F;logs 裡會有檔案 沒有就是錯</p><h2 id="訓練-1B-Fine-tuned-training"><a href="#訓練-1B-Fine-tuned-training" class="headerlink" title="訓練(1B-Fine-tuned training)"></a>訓練(1B-Fine-tuned training)</h2><p>點進 1B-Fine-tuned training 兩個按鈕都按 </p><img src="/2024/04/04/video-retalking-RVC-BossGPT-SoVITS/g.png" class="" title="image"><p>如報錯就是gpu size要改</p><h2 id="1c-inference"><a href="#1c-inference" class="headerlink" title="1c-inference"></a>1c-inference</h2><img src="/2024/04/04/video-retalking-RVC-BossGPT-SoVITS/h.png" class="" title="image"><p>GPT models list 跟 SoVITS models list 都要選數字大的 如果沒選項點refresh 再來 Open TTS inference WEBUI打勾</p><h2 id="終端給新網頁-雙擊"><a href="#終端給新網頁-雙擊" class="headerlink" title="終端給新網頁 雙擊"></a>終端給新網頁 雙擊</h2><img src="/2024/04/04/video-retalking-RVC-BossGPT-SoVITS/i.png" class="" title="image"><p>給十秒內的影片並給影片中文內容<br> 再來給他你想讓他講的句子 按start<br> 音檔生成在右手邊</p><h2 id="加video-retalking使影片更生動"><a href="#加video-retalking使影片更生動" class="headerlink" title="加video-retalking使影片更生動"></a>加video-retalking使影片更生動</h2><h3 id="作品"><a href="#作品" class="headerlink" title="作品:"></a>作品:</h3><p><video controls src="./aa.mp4" title="Title"></video></p>]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> video-retalking </tag>
            
            <tag> RVC-BossGPT-SoVITS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>llama-index</title>
      <link href="/2024/04/01/llama-index/"/>
      <url>/2024/04/01/llama-index/</url>
      
        <content type="html"><![CDATA[<h1 id="LLAMAINDEX"><a href="#LLAMAINDEX" class="headerlink" title="LLAMAINDEX"></a>LLAMAINDEX</h1><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ol><li><p><strong>摘要提取</strong>：通過查詢摘要來對 1GB 的數據集進行總結。LLamaIndex 可以檢索相關節點並合成摘要。</p></li><li><p><strong>位置實體提取</strong>：通過查詢從數據集中提取類似位置的實體來進行位置查詢。</p></li><li><p><strong>問答記錄</strong>：通過查詢問題的答案來記錄問答。</p></li><li><p><strong>聊天機器人增強</strong>：通過查詢對用戶消息的回應來增強數據聊天機器人。</p></li><li><p><strong>結構化分析</strong>：使用 LLamaIndex 可以進行對結構化數據，如表格、CSV 文件和數據庫等的結構化分析。</p></li></ol><h2 id="步驟流程"><a href="#步驟流程" class="headerlink" title="步驟流程"></a>步驟流程</h2><img src="/2024/04/01/llama-index/1.webp" class="" title="Alt text"><p><em><strong>關鍵步驟是將數據加載文件，解析為節點</strong></em></p><img src="/2024/04/01/llama-index/2.webp" class="" title="Alt text"><p><em><strong>在文件&#x2F;節點上構建索引</strong></em></p><img src="/2024/04/01/llama-index/3.webp" class="" title="Alt text"><p><em><strong>查詢索引以檢索相關節點然後解析響應對象。索引也可以持久化並從磁盤重新加載。</strong></em></p><img src="/2024/04/01/llama-index/4.webp" class="" title="Alt text">]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Azure-Openai </tag>
            
            <tag> embedding ,RAG </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Qrant</title>
      <link href="/2024/04/01/Qrant/"/>
      <url>/2024/04/01/Qrant/</url>
      
        <content type="html"><![CDATA[<h1 id="Qdrant-向量資料庫"><a href="#Qdrant-向量資料庫" class="headerlink" title="Qdrant 向量資料庫"></a>Qdrant 向量資料庫</h1><h2 id="用途"><a href="#用途" class="headerlink" title="用途"></a>用途</h2><p>儲存切分後的文字及向量供可反覆查詢</p><h2 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h2><h3 id="pull"><a href="#pull" class="headerlink" title="pull"></a>pull</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker pull qdrant/qdrant</span><br></pre></td></tr></table></figure><h3 id="run"><a href="#run" class="headerlink" title="run"></a>run</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -p 6333:6333 \</span><br><span class="line">    -v $(pwd)/path/to/data:/qdrant/storage \</span><br><span class="line">    qdrant/qdrant</span><br></pre></td></tr></table></figure><h3 id="run-costume-config"><a href="#run-costume-config" class="headerlink" title="run costume config"></a>run costume config</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -p 6333:6333 \</span><br><span class="line">    -v $(pwd)/path/to/data:/qdrant/storage \</span><br><span class="line">    -v $(pwd)/path/to/custom_config.yaml:/qdrant/config/custom_config.yaml \</span><br><span class="line">    qdrant/qdrant \</span><br><span class="line">    ./qdrant --config-path config/custom_config.yaml</span><br></pre></td></tr></table></figure><h2 id="Docker-compose"><a href="#Docker-compose" class="headerlink" title="Docker compose"></a>Docker compose</h2><h3 id="config"><a href="#config" class="headerlink" title="config"></a>config</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">qdrant:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">qdrant/qdrant:latest</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">qdrant</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">6333</span><span class="string">:6333</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">6334</span><span class="string">:6334</span></span><br><span class="line">    <span class="attr">expose:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">6333</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">6334</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">6335</span></span><br><span class="line">    <span class="attr">configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">source:</span> <span class="string">qdrant_config</span></span><br><span class="line">        <span class="attr">target:</span> <span class="string">/qdrant/config/production.yaml</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./qdrant_data:/qdrant_data</span></span><br><span class="line"></span><br><span class="line"><span class="attr">configs:</span></span><br><span class="line">  <span class="attr">qdrant_config:</span></span><br><span class="line">    <span class="attr">content:</span> <span class="string">|</span></span><br><span class="line">      <span class="attr">log_level:</span> <span class="string">INFO</span>        </span><br></pre></td></tr></table></figure><h2 id="加-api-key"><a href="#加-api-key" class="headerlink" title="加 api-key"></a>加 api-key</h2><p>目前在ai.zerozero.com.tw:6333的key</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">zadvsyJ4YBQll4mUckU0z1dt5iD3oPsg</span><br></pre></td></tr></table></figure><h3 id="local-build"><a href="#local-build" class="headerlink" title="local build"></a>local build</h3><p>可以在<code>/config/qdrant</code>中的 <code>config.ymal</code>中找到</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">api_key:</span> <span class="string">your_secret_api_key_here</span></span><br></pre></td></tr></table></figure><p>之後build 一個自己的image</p><h3 id="use-default"><a href="#use-default" class="headerlink" title="use default"></a>use default</h3><p>如果要使用default image 來做更改，也可以</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -p 6333:6333 \</span><br><span class="line">    -v $(pwd)/path/to/data:/qdrant/storage \</span><br><span class="line">    -v $(pwd)/path/to/custom_config.yaml:/qdrant/config/production.yaml \</span><br><span class="line">    qdrant/qdrant</span><br></pre></td></tr></table></figure><h3 id="run-1"><a href="#run-1" class="headerlink" title="run"></a>run</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker compose up -d</span><br></pre></td></tr></table></figure><h2 id="Sql-使用"><a href="#Sql-使用" class="headerlink" title="Sql 使用"></a>Sql 使用</h2><h3 id="創建collection"><a href="#創建collection" class="headerlink" title="創建collection"></a>創建collection</h3><p>1536 是 openai embedding 的維度</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -X PUT http://localhost:6333/collections/rd \</span><br><span class="line">  -H &#x27;Content-Type: application/json&#x27; \</span><br><span class="line">  --data-raw &#x27;&#123;</span><br><span class="line">    &quot;vectors&quot;: &#123;</span><br><span class="line">      &quot;size&quot;: 1536,</span><br><span class="line">      &quot;distance&quot;: &quot;Cosine&quot;</span><br><span class="line">    &#125; </span><br><span class="line">  &#125;&#x27;</span><br></pre></td></tr></table></figure><h3 id="創建包含-apikey-的collection"><a href="#創建包含-apikey-的collection" class="headerlink" title="創建包含 apikey 的collection"></a>創建包含 apikey 的collection</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -X PUT http://localhost:6333/collections/eip   -H <span class="string">&#x27;Content-Type: application/json&#x27;</span> -H <span class="string">&#x27;Authorization: Bearer api-key&#x27;</span>   --data-raw <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">    &quot;vectors&quot;: &#123;</span></span><br><span class="line"><span class="string">      &quot;size&quot;: 1536,</span></span><br><span class="line"><span class="string">      &quot;distance&quot;: &quot;Cosine&quot;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="看資訊"><a href="#看資訊" class="headerlink" title="看資訊"></a>看資訊</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -X GET http://localhost:6333/collections/your-collection-name</span><br></pre></td></tr></table></figure><h3 id="移除Collection"><a href="#移除Collection" class="headerlink" title="移除Collection"></a>移除Collection</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -X DELETE http://localhost:6333/collections/your-collection-name</span><br></pre></td></tr></table></figure><h1 id="qdrant介面操作-link"><a href="#qdrant介面操作-link" class="headerlink" title="qdrant介面操作#link"></a>qdrant介面操作#<a href="http://ai.zerozero.com.tw:6333/dashboard">link</a></h1><img src="/2024/04/01/Qrant/1.png" class="" title="qdrant介面"><h2 id="1-左邊欄位點console輸入以下程式碼"><a href="#1-左邊欄位點console輸入以下程式碼" class="headerlink" title="1.左邊欄位點console輸入以下程式碼"></a>1.左邊欄位點console輸入以下程式碼</h2><img src="/2024/04/01/Qrant/2.png" class="" title="操作"><h3 id="qdrant增刪查語法"><a href="#qdrant增刪查語法" class="headerlink" title="qdrant增刪查語法"></a>qdrant增刪查語法</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> collections<span class="operator">/</span>ec</span><br><span class="line"></span><br><span class="line">PUT collections<span class="operator">/</span>ec</span><br><span class="line">&#123;</span><br><span class="line">   &quot;vectors&quot;: &#123;</span><br><span class="line">      &quot;size&quot;: <span class="number">1536</span>,</span><br><span class="line">      &quot;distance&quot;: &quot;Cosine&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">GET</span> collections<span class="operator">/</span>ec</span><br></pre></td></tr></table></figure><ul><li>DELETE 刪除ec向量集</li><li>PUT  創建 1536是向量維度</li><li>GET  查詢</li></ul>]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vector </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flowise</title>
      <link href="/2024/04/01/Flowise/"/>
      <url>/2024/04/01/Flowise/</url>
      
        <content type="html"><![CDATA[<h1 id="部屬"><a href="#部屬" class="headerlink" title="部屬"></a>部屬</h1><h2 id="官方部屬文件"><a href="#官方部屬文件" class="headerlink" title="官方部屬文件"></a>官方部屬文件</h2><h3 id="github"><a href="#github" class="headerlink" title="github"></a>github</h3><p><a href="https://github.com/FlowiseAI/Flowise">https://github.com/FlowiseAI/Flowise</a></p><h3 id="docs"><a href="#docs" class="headerlink" title="docs"></a>docs</h3><p><a href="https://docs.flowiseai.com/">https://docs.flowiseai.com/</a></p><h2 id="環境"><a href="#環境" class="headerlink" title="環境"></a>環境</h2><h3 id="測試機"><a href="#測試機" class="headerlink" title="測試機"></a>測試機</h3><p>ai 雲端測試機: <a href="http://10.0.194.20:4000/">http://10.0.194.20:4000/</a><br>local ai 主機: <a href="http://10.200.21.47:3000/">http://10.200.21.47:3000/</a></p><p>部屬雲端是為了接入eip，因為local ai 主機會有網域問題</p><h3 id="正式機"><a href="#正式機" class="headerlink" title="正式機"></a>正式機</h3><p>待創建</p><h2 id="部屬方法"><a href="#部屬方法" class="headerlink" title="部屬方法"></a>部屬方法</h2><ol><li><p>clone public repo</p> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/FlowiseAI/Flowise.git</span><br></pre></td></tr></table></figure></li><li><p>安裝docker 及 docker compose<br> 這部分可參考官方說明<a href="https://docs.docker.com/engine/install/">https://docs.docker.com/engine/install/</a></p></li><li><p>cd docker and copy .env.template</p> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd docker &amp;&amp;</span><br><span class="line">cp .env.example .env</span><br></pre></td></tr></table></figure></li><li><p>更改<code>.env</code><br> 主要要更改的部分有</p><ul><li>FILE_SIZE_LIMIT: 避免embedding pdf 檔案過大</li><li>USERNAME &#x2F; PASSWORD</li><li>CORS相關設定，若要嵌入至其他網頁時若沒有設定會被擋</li><li>DATABASE 如果有要做連接資料須寫在這邊 <figure class="highlight text"><table><tr><td class="code"><pre><span class="line">PORT=4000</span><br><span class="line">DATABASE_PATH=/root/.flowise</span><br><span class="line">APIKEY_PATH=/root/.flowise</span><br><span class="line">SECRETKEY_PATH=/root/.flowise</span><br><span class="line">LOG_PATH=/root/.flowise/logs</span><br><span class="line">BLOB_STORAGE_PATH=/root/.flowise/storage</span><br><span class="line"></span><br><span class="line">CORS_ORIGINS=&quot;*&quot;</span><br><span class="line">IFRAME_ORIGINS=&quot;*&quot;</span><br><span class="line">EMBEDDING_ORIGINS=&quot;*&quot;</span><br><span class="line"></span><br><span class="line"># NUMBER_OF_PROXIES= 1</span><br><span class="line"></span><br><span class="line"># DATABASE_TYPE=postgres</span><br><span class="line"># DATABASE_PORT=&quot;&quot;</span><br><span class="line"># DATABASE_HOST=&quot;&quot;</span><br><span class="line"># DATABASE_NAME=&quot;flowise&quot;</span><br><span class="line"># DATABASE_USER=&quot;&quot;</span><br><span class="line"># DATABASE_PASSWORD=&quot;&quot;</span><br><span class="line"># DATABASE_SSL=true</span><br><span class="line"># DATABASE_SSL_KEY_BASE64=&lt;Self signed certificate in BASE64&gt;</span><br><span class="line"></span><br><span class="line">FLOWISE_USERNAME=it</span><br><span class="line">FLOWISE_PASSWORD=itit</span><br><span class="line"># FLOWISE_SECRETKEY_OVERWRITE=myencryptionkey</span><br><span class="line">FLOWISE_FILE_SIZE_LIMIT=200mb</span><br><span class="line"># DEBUG=true</span><br><span class="line"># LOG_LEVEL=debug (error | warn | info | verbose | debug)</span><br><span class="line"># TOOL_FUNCTION_BUILTIN_DEP=crypto,fs</span><br><span class="line"># TOOL_FUNCTION_EXTERNAL_DEP=moment,lodash</span><br><span class="line"></span><br><span class="line"># LANGCHAIN_TRACING_V2=true</span><br><span class="line"># LANGCHAIN_ENDPOINT=https://api.smith.langchain.com</span><br><span class="line"># LANGCHAIN_API_KEY=your_api_key</span><br><span class="line"># LANGCHAIN_PROJECT=your_project</span><br><span class="line"></span><br><span class="line"># DISABLE_FLOWISE_TELEMETRY=true</span><br></pre></td></tr></table></figure></li></ul></li><li><p>起<code>docker compose</code></p> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker compose up -d</span><br></pre></td></tr></table></figure><p>起來之後就會在設定的port號run起來了</p></li></ol><h1 id="FLOWISE操作-link"><a href="#FLOWISE操作-link" class="headerlink" title="FLOWISE操作#link"></a>FLOWISE操作#<a href = "https://ai.zerozero.com.tw:4000/">link</a></h1><p><em><strong>機密資料一律用azure openai</strong></em></p><img src="/2024/04/01/Flowise/1.png" class="" title="photo"><h2 id="1-文檔embeding進qdrant"><a href="#1-文檔embeding進qdrant" class="headerlink" title="1.文檔embeding進qdrant"></a>1.文檔embeding進qdrant</h2><h3 id="先切分上傳文檔-並轉換為向量-丟進vector資料庫"><a href="#先切分上傳文檔-並轉換為向量-丟進vector資料庫" class="headerlink" title="先切分上傳文檔 並轉換為向量 丟進vector資料庫"></a>先切分上傳文檔 並轉換為向量 丟進vector資料庫</h3><p>接好線後 先按右上方綠色按鈕 將向量丟進qdrant</p><ul><li>1.chunk size是切是切分大小</li><li>2.chunk overlap 重疊部分</li><li>3.Connect Credential 輸入或新增openai金鑰</li><li>4.connect credential 輸入qrant API KEY</li><li>5.server 你Qdrant連線的url</li><li>6.collection name 你設定的qdrant collection名子<img src="/2024/04/01/Flowise/2.png" class="" title="photo"></li></ul><h2 id="2-查詢"><a href="#2-查詢" class="headerlink" title="2.查詢"></a>2.查詢</h2><h3 id="將query轉成vector-並做相似度查詢-將相近向量的語句-給ai作生成"><a href="#將query轉成vector-並做相似度查詢-將相近向量的語句-給ai作生成" class="headerlink" title="將query轉成vector 並做相似度查詢 將相近向量的語句 給ai作生成"></a>將query轉成vector 並做相似度查詢 將相近向量的語句 給ai作生成</h3><p>點右上紫色按鈕即可對話</p><ul><li>1 Connect Credential 輸入或新增openai金鑰</li><li>2 model name 一律gpt35</li></ul><img src="/2024/04/01/Flowise/3.png" class="" title="photo">]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> flowise </tag>
            
            <tag> qrant </tag>
            
            <tag> embedding </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
