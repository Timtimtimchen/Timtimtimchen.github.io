<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>考研戰士Tim</title>
  
  
  <link href="https://timtimtimchen.github.io/atom.xml" rel="self"/>
  
  <link href="https://timtimtimchen.github.io/"/>
  <updated>2024-04-01T14:23:56.965Z</updated>
  <id>https://timtimtimchen.github.io/</id>
  
  <author>
    <name>TIM</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>llama-index</title>
    <link href="https://timtimtimchen.github.io/2024/04/01/llama-index/"/>
    <id>https://timtimtimchen.github.io/2024/04/01/llama-index/</id>
    <published>2024-04-01T14:23:06.000Z</published>
    <updated>2024-04-01T14:23:56.965Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LLAMAINDEX"><a href="#LLAMAINDEX" class="headerlink" title="LLAMAINDEX"></a>LLAMAINDEX</h1><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ol><li><p><strong>摘要提取</strong>：通過查詢摘要來對 1GB 的數據集進行總結。LLamaIndex 可以檢索相關節點並合成摘要。</p></li><li><p><strong>位置實體提取</strong>：通過查詢從數據集中提取類似位置的實體來進行位置查詢。</p></li><li><p><strong>問答記錄</strong>：通過查詢問題的答案來記錄問答。</p></li><li><p><strong>聊天機器人增強</strong>：通過查詢對用戶消息的回應來增強數據聊天機器人。</p></li><li><p><strong>結構化分析</strong>：使用 LLamaIndex 可以進行對結構化數據，如表格、CSV 文件和數據庫等的結構化分析。</p></li></ol><h2 id="步驟流程"><a href="#步驟流程" class="headerlink" title="步驟流程"></a>步驟流程</h2><img src="/2024/04/01/llama-index/1.webp" class="" title="Alt text"><p><em><strong>關鍵步驟是將數據加載文件，解析為節點</strong></em></p><img src="/2024/04/01/llama-index/2.webp" class="" title="Alt text"><p><em><strong>在文件&#x2F;節點上構建索引</strong></em></p><img src="/2024/04/01/llama-index/3.webp" class="" title="Alt text"><p><em><strong>查詢索引以檢索相關節點然後解析響應對象。索引也可以持久化並從磁盤重新加載。</strong></em></p><img src="/2024/04/01/llama-index/4.webp" class="" title="Alt text">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;LLAMAINDEX&quot;&gt;&lt;a href=&quot;#LLAMAINDEX&quot; class=&quot;headerlink&quot; title=&quot;LLAMAINDEX&quot;&gt;&lt;/a&gt;LLAMAINDEX&lt;/h1&gt;&lt;h2 id=&quot;功能&quot;&gt;&lt;a href=&quot;#功能&quot; class=&quot;headerli</summary>
      
    
    
    
    
    <category term="Azure Ooenai ,embedding ,RAG" scheme="https://timtimtimchen.github.io/tags/Azure-Ooenai-embedding-RAG/"/>
    
  </entry>
  
  <entry>
    <title>Qrant</title>
    <link href="https://timtimtimchen.github.io/2024/04/01/Qrant/"/>
    <id>https://timtimtimchen.github.io/2024/04/01/Qrant/</id>
    <published>2024-04-01T13:52:38.000Z</published>
    <updated>2024-04-01T14:00:25.192Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Qdrant-向量資料庫"><a href="#Qdrant-向量資料庫" class="headerlink" title="Qdrant 向量資料庫"></a>Qdrant 向量資料庫</h1><h2 id="用途"><a href="#用途" class="headerlink" title="用途"></a>用途</h2><p>儲存切分後的文字及向量供可反覆查詢</p><h2 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h2><h3 id="pull"><a href="#pull" class="headerlink" title="pull"></a>pull</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker pull qdrant/qdrant</span><br></pre></td></tr></table></figure><h3 id="run"><a href="#run" class="headerlink" title="run"></a>run</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -p 6333:6333 \</span><br><span class="line">    -v $(pwd)/path/to/data:/qdrant/storage \</span><br><span class="line">    qdrant/qdrant</span><br></pre></td></tr></table></figure><h3 id="run-costume-config"><a href="#run-costume-config" class="headerlink" title="run costume config"></a>run costume config</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -p 6333:6333 \</span><br><span class="line">    -v $(pwd)/path/to/data:/qdrant/storage \</span><br><span class="line">    -v $(pwd)/path/to/custom_config.yaml:/qdrant/config/custom_config.yaml \</span><br><span class="line">    qdrant/qdrant \</span><br><span class="line">    ./qdrant --config-path config/custom_config.yaml</span><br></pre></td></tr></table></figure><h2 id="Docker-compose"><a href="#Docker-compose" class="headerlink" title="Docker compose"></a>Docker compose</h2><h3 id="config"><a href="#config" class="headerlink" title="config"></a>config</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">qdrant:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">qdrant/qdrant:latest</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">qdrant</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">6333</span><span class="string">:6333</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">6334</span><span class="string">:6334</span></span><br><span class="line">    <span class="attr">expose:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">6333</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">6334</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">6335</span></span><br><span class="line">    <span class="attr">configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">source:</span> <span class="string">qdrant_config</span></span><br><span class="line">        <span class="attr">target:</span> <span class="string">/qdrant/config/production.yaml</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./qdrant_data:/qdrant_data</span></span><br><span class="line"></span><br><span class="line"><span class="attr">configs:</span></span><br><span class="line">  <span class="attr">qdrant_config:</span></span><br><span class="line">    <span class="attr">content:</span> <span class="string">|</span></span><br><span class="line">      <span class="attr">log_level:</span> <span class="string">INFO</span>        </span><br></pre></td></tr></table></figure><h2 id="加-api-key"><a href="#加-api-key" class="headerlink" title="加 api-key"></a>加 api-key</h2><p>目前在ai.zerozero.com.tw:6333的key</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">zadvsyJ4YBQll4mUckU0z1dt5iD3oPsg</span><br></pre></td></tr></table></figure><h3 id="local-build"><a href="#local-build" class="headerlink" title="local build"></a>local build</h3><p>可以在<code>/config/qdrant</code>中的 <code>config.ymal</code>中找到</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">api_key:</span> <span class="string">your_secret_api_key_here</span></span><br></pre></td></tr></table></figure><p>之後build 一個自己的image</p><h3 id="use-default"><a href="#use-default" class="headerlink" title="use default"></a>use default</h3><p>如果要使用default image 來做更改，也可以</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -p 6333:6333 \</span><br><span class="line">    -v $(pwd)/path/to/data:/qdrant/storage \</span><br><span class="line">    -v $(pwd)/path/to/custom_config.yaml:/qdrant/config/production.yaml \</span><br><span class="line">    qdrant/qdrant</span><br></pre></td></tr></table></figure><h3 id="run-1"><a href="#run-1" class="headerlink" title="run"></a>run</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker compose up -d</span><br></pre></td></tr></table></figure><h2 id="Sql-使用"><a href="#Sql-使用" class="headerlink" title="Sql 使用"></a>Sql 使用</h2><h3 id="創建collection"><a href="#創建collection" class="headerlink" title="創建collection"></a>創建collection</h3><p>1536 是 openai embedding 的維度</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -X PUT http://localhost:6333/collections/rd \</span><br><span class="line">  -H &#x27;Content-Type: application/json&#x27; \</span><br><span class="line">  --data-raw &#x27;&#123;</span><br><span class="line">    &quot;vectors&quot;: &#123;</span><br><span class="line">      &quot;size&quot;: 1536,</span><br><span class="line">      &quot;distance&quot;: &quot;Cosine&quot;</span><br><span class="line">    &#125; </span><br><span class="line">  &#125;&#x27;</span><br></pre></td></tr></table></figure><h3 id="創建包含-apikey-的collection"><a href="#創建包含-apikey-的collection" class="headerlink" title="創建包含 apikey 的collection"></a>創建包含 apikey 的collection</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -X PUT http://localhost:6333/collections/eip   -H <span class="string">&#x27;Content-Type: application/json&#x27;</span> -H <span class="string">&#x27;Authorization: Bearer api-key&#x27;</span>   --data-raw <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">    &quot;vectors&quot;: &#123;</span></span><br><span class="line"><span class="string">      &quot;size&quot;: 1536,</span></span><br><span class="line"><span class="string">      &quot;distance&quot;: &quot;Cosine&quot;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="看資訊"><a href="#看資訊" class="headerlink" title="看資訊"></a>看資訊</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -X GET http://localhost:6333/collections/your-collection-name</span><br></pre></td></tr></table></figure><h3 id="移除Collection"><a href="#移除Collection" class="headerlink" title="移除Collection"></a>移除Collection</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -X DELETE http://localhost:6333/collections/your-collection-name</span><br></pre></td></tr></table></figure><h1 id="qdrant介面操作-link"><a href="#qdrant介面操作-link" class="headerlink" title="qdrant介面操作#link"></a>qdrant介面操作#<a href="http://ai.zerozero.com.tw:6333/dashboard">link</a></h1><img src="/2024/04/01/Qrant/1.png" class="" title="qdrant介面"><h2 id="1-左邊欄位點console輸入以下程式碼"><a href="#1-左邊欄位點console輸入以下程式碼" class="headerlink" title="1.左邊欄位點console輸入以下程式碼"></a>1.左邊欄位點console輸入以下程式碼</h2><img src="/2024/04/01/Qrant/2.png" class="" title="操作"><h3 id="qdrant增刪查語法"><a href="#qdrant增刪查語法" class="headerlink" title="qdrant增刪查語法"></a>qdrant增刪查語法</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> collections<span class="operator">/</span>ec</span><br><span class="line"></span><br><span class="line">PUT collections<span class="operator">/</span>ec</span><br><span class="line">&#123;</span><br><span class="line">   &quot;vectors&quot;: &#123;</span><br><span class="line">      &quot;size&quot;: <span class="number">1536</span>,</span><br><span class="line">      &quot;distance&quot;: &quot;Cosine&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">GET</span> collections<span class="operator">/</span>ec</span><br></pre></td></tr></table></figure><ul><li>DELETE 刪除ec向量集</li><li>PUT  創建 1536是向量維度</li><li>GET  查詢</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Qdrant-向量資料庫&quot;&gt;&lt;a href=&quot;#Qdrant-向量資料庫&quot; class=&quot;headerlink&quot; title=&quot;Qdrant 向量資料庫&quot;&gt;&lt;/a&gt;Qdrant 向量資料庫&lt;/h1&gt;&lt;h2 id=&quot;用途&quot;&gt;&lt;a href=&quot;#用途&quot; class=&quot;</summary>
      
    
    
    
    
    <category term="vector" scheme="https://timtimtimchen.github.io/tags/vector/"/>
    
  </entry>
  
  <entry>
    <title>Flowise</title>
    <link href="https://timtimtimchen.github.io/2024/04/01/Flowise/"/>
    <id>https://timtimtimchen.github.io/2024/04/01/Flowise/</id>
    <published>2024-04-01T13:21:43.000Z</published>
    <updated>2024-04-01T13:52:15.620Z</updated>
    
    <content type="html"><![CDATA[<h1 id="部屬"><a href="#部屬" class="headerlink" title="部屬"></a>部屬</h1><h2 id="官方部屬文件"><a href="#官方部屬文件" class="headerlink" title="官方部屬文件"></a>官方部屬文件</h2><h3 id="github"><a href="#github" class="headerlink" title="github"></a>github</h3><p><a href="https://github.com/FlowiseAI/Flowise">https://github.com/FlowiseAI/Flowise</a></p><h3 id="docs"><a href="#docs" class="headerlink" title="docs"></a>docs</h3><p><a href="https://docs.flowiseai.com/">https://docs.flowiseai.com/</a></p><h2 id="環境"><a href="#環境" class="headerlink" title="環境"></a>環境</h2><h3 id="測試機"><a href="#測試機" class="headerlink" title="測試機"></a>測試機</h3><p>ai 雲端測試機: <a href="http://10.0.194.20:4000/">http://10.0.194.20:4000/</a><br>local ai 主機: <a href="http://10.200.21.47:3000/">http://10.200.21.47:3000/</a></p><p>部屬雲端是為了接入eip，因為local ai 主機會有網域問題</p><h3 id="正式機"><a href="#正式機" class="headerlink" title="正式機"></a>正式機</h3><p>待創建</p><h2 id="部屬方法"><a href="#部屬方法" class="headerlink" title="部屬方法"></a>部屬方法</h2><ol><li><p>clone public repo</p> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/FlowiseAI/Flowise.git</span><br></pre></td></tr></table></figure></li><li><p>安裝docker 及 docker compose<br> 這部分可參考官方說明<a href="https://docs.docker.com/engine/install/">https://docs.docker.com/engine/install/</a></p></li><li><p>cd docker and copy .env.template</p> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd docker &amp;&amp;</span><br><span class="line">cp .env.example .env</span><br></pre></td></tr></table></figure></li><li><p>更改<code>.env</code><br> 主要要更改的部分有</p><ul><li>FILE_SIZE_LIMIT: 避免embedding pdf 檔案過大</li><li>USERNAME &#x2F; PASSWORD</li><li>CORS相關設定，若要嵌入至其他網頁時若沒有設定會被擋</li><li>DATABASE 如果有要做連接資料須寫在這邊 <figure class="highlight text"><table><tr><td class="code"><pre><span class="line">PORT=4000</span><br><span class="line">DATABASE_PATH=/root/.flowise</span><br><span class="line">APIKEY_PATH=/root/.flowise</span><br><span class="line">SECRETKEY_PATH=/root/.flowise</span><br><span class="line">LOG_PATH=/root/.flowise/logs</span><br><span class="line">BLOB_STORAGE_PATH=/root/.flowise/storage</span><br><span class="line"></span><br><span class="line">CORS_ORIGINS=&quot;*&quot;</span><br><span class="line">IFRAME_ORIGINS=&quot;*&quot;</span><br><span class="line">EMBEDDING_ORIGINS=&quot;*&quot;</span><br><span class="line"></span><br><span class="line"># NUMBER_OF_PROXIES= 1</span><br><span class="line"></span><br><span class="line"># DATABASE_TYPE=postgres</span><br><span class="line"># DATABASE_PORT=&quot;&quot;</span><br><span class="line"># DATABASE_HOST=&quot;&quot;</span><br><span class="line"># DATABASE_NAME=&quot;flowise&quot;</span><br><span class="line"># DATABASE_USER=&quot;&quot;</span><br><span class="line"># DATABASE_PASSWORD=&quot;&quot;</span><br><span class="line"># DATABASE_SSL=true</span><br><span class="line"># DATABASE_SSL_KEY_BASE64=&lt;Self signed certificate in BASE64&gt;</span><br><span class="line"></span><br><span class="line">FLOWISE_USERNAME=it</span><br><span class="line">FLOWISE_PASSWORD=itit</span><br><span class="line"># FLOWISE_SECRETKEY_OVERWRITE=myencryptionkey</span><br><span class="line">FLOWISE_FILE_SIZE_LIMIT=200mb</span><br><span class="line"># DEBUG=true</span><br><span class="line"># LOG_LEVEL=debug (error | warn | info | verbose | debug)</span><br><span class="line"># TOOL_FUNCTION_BUILTIN_DEP=crypto,fs</span><br><span class="line"># TOOL_FUNCTION_EXTERNAL_DEP=moment,lodash</span><br><span class="line"></span><br><span class="line"># LANGCHAIN_TRACING_V2=true</span><br><span class="line"># LANGCHAIN_ENDPOINT=https://api.smith.langchain.com</span><br><span class="line"># LANGCHAIN_API_KEY=your_api_key</span><br><span class="line"># LANGCHAIN_PROJECT=your_project</span><br><span class="line"></span><br><span class="line"># DISABLE_FLOWISE_TELEMETRY=true</span><br></pre></td></tr></table></figure></li></ul></li><li><p>起<code>docker compose</code></p> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker compose up -d</span><br></pre></td></tr></table></figure><p>起來之後就會在設定的port號run起來了</p></li></ol><h1 id="FLOWISE操作-link"><a href="#FLOWISE操作-link" class="headerlink" title="FLOWISE操作#link"></a>FLOWISE操作#<a href = "https://ai.zerozero.com.tw:4000/">link</a></h1><p><em><strong>機密資料一律用azure openai</strong></em></p><img src="/2024/04/01/Flowise/1.png" class="" title="photo"><h2 id="1-文檔embeding進qdrant"><a href="#1-文檔embeding進qdrant" class="headerlink" title="1.文檔embeding進qdrant"></a>1.文檔embeding進qdrant</h2><h3 id="先切分上傳文檔-並轉換為向量-丟進vector資料庫"><a href="#先切分上傳文檔-並轉換為向量-丟進vector資料庫" class="headerlink" title="先切分上傳文檔 並轉換為向量 丟進vector資料庫"></a>先切分上傳文檔 並轉換為向量 丟進vector資料庫</h3><p>接好線後 先按右上方綠色按鈕 將向量丟進qdrant</p><ul><li>1.chunk size是切是切分大小</li><li>2.chunk overlap 重疊部分</li><li>3.Connect Credential 輸入或新增openai金鑰</li><li>4.connect credential 輸入qrant API KEY</li><li>5.server 你Qdrant連線的url</li><li>6.collection name 你設定的qdrant collection名子<img src="/2024/04/01/Flowise/2.png" class="" title="photo"></li></ul><h2 id="2-查詢"><a href="#2-查詢" class="headerlink" title="2.查詢"></a>2.查詢</h2><h3 id="將query轉成vector-並做相似度查詢-將相近向量的語句-給ai作生成"><a href="#將query轉成vector-並做相似度查詢-將相近向量的語句-給ai作生成" class="headerlink" title="將query轉成vector 並做相似度查詢 將相近向量的語句 給ai作生成"></a>將query轉成vector 並做相似度查詢 將相近向量的語句 給ai作生成</h3><p>點右上紫色按鈕即可對話</p><ul><li>1 Connect Credential 輸入或新增openai金鑰</li><li>2 model name 一律gpt35</li></ul><img src="/2024/04/01/Flowise/3.png" class="" title="photo">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;部屬&quot;&gt;&lt;a href=&quot;#部屬&quot; class=&quot;headerlink&quot; title=&quot;部屬&quot;&gt;&lt;/a&gt;部屬&lt;/h1&gt;&lt;h2 id=&quot;官方部屬文件&quot;&gt;&lt;a href=&quot;#官方部屬文件&quot; class=&quot;headerlink&quot; title=&quot;官方部屬文件&quot;&gt;&lt;/a&gt;官</summary>
      
    
    
    
    
    <category term="flowise , qrant , embedding" scheme="https://timtimtimchen.github.io/tags/flowise-qrant-embedding/"/>
    
  </entry>
  
</feed>
