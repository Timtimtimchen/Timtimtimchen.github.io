<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>考研戰士Tim</title>
  
  
  <link href="https://timtimtimchen.github.io/atom.xml" rel="self"/>
  
  <link href="https://timtimtimchen.github.io/"/>
  <updated>2024-07-25T04:36:00.127Z</updated>
  <id>https://timtimtimchen.github.io/</id>
  
  <author>
    <name>TIM</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>台股分析(python)</title>
    <link href="https://timtimtimchen.github.io/2024/07/25/%E5%8F%B0%E8%82%A1%E5%88%86%E6%9E%90/"/>
    <id>https://timtimtimchen.github.io/2024/07/25/%E5%8F%B0%E8%82%A1%E5%88%86%E6%9E%90/</id>
    <published>2024-07-25T03:49:24.000Z</published>
    <updated>2024-07-25T04:36:00.127Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近跟朋友在研究藍天(2362)這隻股 遲遲不敢進場 這兩天颱風休市 美股又崩盤 朋友買三張 期待明天開盤 簡單分析如圖 有時間再架網站</p><img src="/2024/07/25/%E5%8F%B0%E8%82%A1%E5%88%86%E6%9E%90/2.png" class="" title="台股分析"><h2 id="操作與說明"><a href="#操作與說明" class="headerlink" title="操作與說明"></a>操作與說明</h2><p>已打包到<a href="https://hub.docker.com/r/timtimtimchen/twstock/tags">DockerHub</a></p><h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><figure class="highlight docker"><table><tr><td class="code"><pre><span class="line">docker pull timtimtimchen/twstock:latest</span><br><span class="line"></span><br><span class="line"><span class="comment">#更新資訊</span></span><br><span class="line">docker <span class="keyword">run</span><span class="language-bash"> -ti timtimtimchen/twstock twstock -U </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#四大買賣點分析(後面數字是股票代號)</span></span><br><span class="line">docker <span class="keyword">run</span><span class="language-bash"> -ti timtimtimchen/twstock twstock -b 2362 2330</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#股價查詢</span></span><br><span class="line">docker <span class="keyword">run</span><span class="language-bash"> -ti timtimtimchen/twstock twstock -s 2362 2330</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近跟朋友在研究藍天(2362)這隻股 遲遲不敢進場 這兩天颱風休市 美股又崩盤 朋友買三張 期待明天開盤 簡單分析如圖 有時間再架網站&lt;/</summary>
      
    
    
    
    
    <category term="twstock" scheme="https://timtimtimchen.github.io/tags/twstock/"/>
    
  </entry>
  
  <entry>
    <title>DB-GPT</title>
    <link href="https://timtimtimchen.github.io/2024/05/12/DB-GPT/"/>
    <id>https://timtimtimchen.github.io/2024/05/12/DB-GPT/</id>
    <published>2024-05-11T16:08:34.000Z</published>
    <updated>2024-06-02T08:39:03.393Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介紹"><a href="#介紹" class="headerlink" title="介紹"></a>介紹</h2><p>DB-GPT是一個開源的AI原生數據應用開發框架，具備AWEL（Agentic Workflow Expression Language）和Agents。目的在於構建大型模型領域的基礎設施，透過開發多模型管理（SMMF）、Text2SQL效果優化、RAG框架以及優化、Multi-Agents框架協作、AWEL（智能體工作流編排）等多種技術能力,使得更加方便</p><h2 id="部屬"><a href="#部屬" class="headerlink" title="部屬"></a>部屬</h2><figure class="highlight docker"><table><tr><td class="code"><pre><span class="line"><span class="comment">#在 D:\DB-GPT 拉取image</span></span><br><span class="line">docker pull eosphorosai/dbgpt:latest</span><br><span class="line"></span><br><span class="line">cd DB-GPT</span><br><span class="line">mkdir data\models and cd data\models</span><br><span class="line"></span><br><span class="line"><span class="comment"># embedding model</span></span><br><span class="line">git clone https://huggingface.co/GanymedeNil/text2vec-large-chinese</span><br><span class="line"></span><br><span class="line"><span class="comment">#沒有GPU版本</span></span><br><span class="line">$PROXY_API_KEY=<span class="string">&quot;&quot;</span></span><br><span class="line">$PROXY_SERVER_URL=<span class="string">&quot;https://api.openai.com/v1/chat/completions&quot;</span></span><br><span class="line">docker <span class="keyword">run</span><span class="language-bash">  -d -p 3306:3306 -p 5000:5000 -p 5670:5670 -e LOCAL_DB_HOST=127.0.0.1 -e LOCAL_DB_PASSWORD=aa123456 -e MYSQL_ROOT_PASSWORD=aa123456 -e LLM_MODEL=proxyllm -e PROXY_API_KEY=<span class="variable">$PROXY_API_KEY</span> -e PROXY_SERVER_URL=<span class="variable">$PROXY_SERVER_URL</span> -e LANGUAGE=zh -v .\data\models\text2vec-large-chinese:/app/models/text2vec-large-chinese --name dbgpt eosphorosai/dbgpt</span></span><br></pre></td></tr></table></figure><h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><h3 id="chat-mysql-測試"><a href="#chat-mysql-測試" class="headerlink" title="chat mysql 測試"></a>chat mysql 測試</h3><img src="/2024/05/12/DB-GPT/1.png" class="" title="ai"><img src="/2024/05/12/DB-GPT/2.png" class="" title="ai"><h3 id="新增與修改mysql數據"><a href="#新增與修改mysql數據" class="headerlink" title="新增與修改mysql數據"></a>新增與修改mysql數據</h3><img src="/2024/05/12/DB-GPT/3.png" class="" title="ai"><img src="/2024/05/12/DB-GPT/4.png" class="" title="ai"><h3 id="根據mysql資料做圖表分析"><a href="#根據mysql資料做圖表分析" class="headerlink" title="根據mysql資料做圖表分析"></a>根據mysql資料做圖表分析</h3><img src="/2024/05/12/DB-GPT/5.png" class="" title="ai"><p><em><strong>還會自動做join</strong></em></p><img src="/2024/05/12/DB-GPT/6.png" class="" title="ai"><h2 id="根據知識庫做問答與修改"><a href="#根據知識庫做問答與修改" class="headerlink" title="根據知識庫做問答與修改"></a>根據知識庫做問答與修改</h2><img src="/2024/05/12/DB-GPT/7.png" class="" title="ai"><img src="/2024/05/12/DB-GPT/8.png" class="" title="ai">]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;介紹&quot;&gt;&lt;a href=&quot;#介紹&quot; class=&quot;headerlink&quot; title=&quot;介紹&quot;&gt;&lt;/a&gt;介紹&lt;/h2&gt;&lt;p&gt;DB-GPT是一個開源的AI原生數據應用開發框架，具備AWEL（Agentic Workflow Expression Language）和</summary>
      
    
    
    
    <category term="AI" scheme="https://timtimtimchen.github.io/categories/AI/"/>
    
    
    <category term="ai" scheme="https://timtimtimchen.github.io/tags/ai/"/>
    
    <category term="SQL" scheme="https://timtimtimchen.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>N8N(自動工作流程)</title>
    <link href="https://timtimtimchen.github.io/2024/05/04/n8n/"/>
    <id>https://timtimtimchen.github.io/2024/05/04/n8n/</id>
    <published>2024-05-04T08:38:00.000Z</published>
    <updated>2024-06-02T08:36:42.396Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近老闆開會強調效率這件事,於是找到這款工作流程開源軟體,相較於Flowise,N8N不止提供AI,還支持多種節點,可以讓各部門解決行政上重複問題,加快工作速度 </p><h2 id="介紹"><a href="#介紹" class="headerlink" title="介紹"></a>介紹</h2><p>n8n 是一個開源而且免費的自動化工作流平台，它提供了簡單易用的 Web UI，拉出需要節點串成流程圖，不用寫代碼就能夠簡單的創建自己的工作流。</p><h2 id="部屬"><a href="#部屬" class="headerlink" title="部屬"></a>部屬</h2><figure class="highlight docker"><table><tr><td class="code"><pre><span class="line">docker <span class="keyword">volume</span><span class="language-bash"> create n8n_data</span></span><br><span class="line"></span><br><span class="line">docker <span class="keyword">run</span><span class="language-bash"> -it --<span class="built_in">rm</span> --name n8n -e N8N_SECURE_COOKIE=<span class="literal">false</span> -p 5678:5678 -v n8n_data:/home/node/.n8n docker.n8n.io/n8nio/n8n</span></span><br></pre></td></tr></table></figure><h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><h3 id="接向量資料庫做問答"><a href="#接向量資料庫做問答" class="headerlink" title="接向量資料庫做問答"></a>接向量資料庫做問答</h3><img src="/2024/05/04/n8n/1.png" class="" title="node"><img src="/2024/05/04/n8n/2.png" class="" title="qa"><h3 id="postman接api做問答-須外加webhook節點"><a href="#postman接api做問答-須外加webhook節點" class="headerlink" title="postman接api做問答(須外加webhook節點)"></a>postman接api做問答(須外加webhook節點)</h3><img src="/2024/05/04/n8n/3.png" class="" title="api">]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近老闆開會強調效率這件事,於是找到這款工作流程開源軟體,相較於Flowise,N8N不止提供AI,還支持多種節點,可以讓各部門解決行政上重</summary>
      
    
    
    
    <category term="AI" scheme="https://timtimtimchen.github.io/categories/AI/"/>
    
    
    <category term="workflow" scheme="https://timtimtimchen.github.io/tags/workflow/"/>
    
    <category term="RPA" scheme="https://timtimtimchen.github.io/tags/RPA/"/>
    
  </entry>
  
  <entry>
    <title>anythingllm</title>
    <link href="https://timtimtimchen.github.io/2024/04/14/anythingllm/"/>
    <id>https://timtimtimchen.github.io/2024/04/14/anythingllm/</id>
    <published>2024-04-13T16:45:20.000Z</published>
    <updated>2024-05-04T18:21:53.061Z</updated>
    
    <content type="html"><![CDATA[<h2 id="部屬"><a href="#部屬" class="headerlink" title="部屬"></a>部屬</h2><ol><li><p>從 docker 拉取最新映像。支援 CPU 架構</p><figure class="highlight docker"><table><tr><td class="code"><pre><span class="line">docker pull mintplexlabs/anythingllm</span><br></pre></td></tr></table></figure></li><li><p>在本地掛載存儲並在 Docker 中運行 AnythingLLM</p></li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Run this in powershell terminal</span></span><br><span class="line"><span class="variable">$env</span>:STORAGE_LOCATION=<span class="string">&quot;<span class="variable">$HOME</span>\Documents\anythingllm&quot;</span>; `</span><br><span class="line">If(!(Test-Path <span class="variable">$env</span>:STORAGE_LOCATION)) &#123;New-Item <span class="variable">$env</span>:STORAGE_LOCATION -ItemType Directory&#125;; `</span><br><span class="line">If(!(Test-Path <span class="string">&quot;<span class="variable">$env</span>:STORAGE_LOCATION\.env&quot;</span>)) &#123;New-Item <span class="string">&quot;<span class="variable">$env</span>:STORAGE_LOCATION\.env&quot;</span> -ItemType File&#125;; `</span><br><span class="line">docker run -d -p 3001:3001 `</span><br><span class="line">--cap-add SYS_ADMIN `</span><br><span class="line">-v <span class="string">&quot;<span class="variable">$env</span>:STORAGE_LOCATION`:/app/server/storage&quot;</span> `</span><br><span class="line">-v <span class="string">&quot;<span class="variable">$env</span>:STORAGE_LOCATION\.env:/app/server/.env&quot;</span> `</span><br><span class="line">-e STORAGE_DIR=<span class="string">&quot;/app/server/storage&quot;</span> `</span><br><span class="line">mintplexlabs/anythingllm;</span><br></pre></td></tr></table></figure><ol start="3"><li>docker 啟用在 <a href="http://localhost:3001/">http://localhost:3001</a></li></ol><h2 id="介面操作"><a href="#介面操作" class="headerlink" title="介面操作"></a>介面操作</h2><ol><li><p>起始畫面 選擇ai模型 輸入api key 與 Model Preference</p></li><li><p>選擇要導入的向量庫 填入端點(<a href="http://ai.zerozero.com.tw:6333/)%E8%B7%9Fapi">http://ai.zerozero.com.tw:6333/)跟api</a> key(zadvsyJ4YBQll4mUckU0z1dt5iD3oPsg)</p><img src="/2024/04/14/anythingllm/1.png" class="" title="image"></li><li><p>點他 隨便建個名字 這個名字決定你向量庫collection的名字</p><img src="/2024/04/14/anythingllm/2.png" class="" title="image"></li><li><p>點他 上傳你的檔案</p><img src="/2024/04/14/anythingllm/3.png" class="" title="image"></li><li><p>上傳之後會跑到custom-documents資料夾下方</p><img src="/2024/04/14/anythingllm/4.png" class="" title="image"></li><li><p>點格子 送她去工作區 檔案會出現在下方 然後save他</p><img src="/2024/04/14/anythingllm/5.png" class="" title="image"></li><li><p>保存後能在qdrant裡看到對應的子集</p><img src="/2024/04/14/anythingllm/6.png" class="" title="image"></li><li><p>跳出後即可開始跟機器人對話 並且能詢問文檔內容</p></li><li><p>如要更換模型 點按左下角設定檔 </p><img src="/2024/04/14/anythingllm/7.png" class="" title="image"></li><li><p>詢問該檔案問題會在答覆下方顯示參考的資料</p><img src="/2024/04/14/anythingllm/8.png" class="" title="image"></li><li><p>左上角設定圖標可設定自訂機器人參數 看不懂按滑鼠右鍵翻譯成中文就都懂了</p><img src="/2024/04/14/anythingllm/9.png" class="" title="image"></li><li><p>也可以new同個機器人出來產生新對話</p><img src="/2024/04/14/anythingllm/10.png" class="" title="image"><img src="/2024/04/14/anythingllm/11.png" class="" title="image"></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;部屬&quot;&gt;&lt;a href=&quot;#部屬&quot; class=&quot;headerlink&quot; title=&quot;部屬&quot;&gt;&lt;/a&gt;部屬&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;從 docker 拉取最新映像。支援 CPU 架構&lt;/p&gt;
&lt;figure class=&quot;highlight docker</summary>
      
    
    
    
    <category term="AI" scheme="https://timtimtimchen.github.io/categories/AI/"/>
    
    
    <category term="ai" scheme="https://timtimtimchen.github.io/tags/ai/"/>
    
    <category term="embedding" scheme="https://timtimtimchen.github.io/tags/embedding/"/>
    
  </entry>
  
  <entry>
    <title>meta-spark</title>
    <link href="https://timtimtimchen.github.io/2024/04/04/meta-spark/"/>
    <id>https://timtimtimchen.github.io/2024/04/04/meta-spark/</id>
    <published>2024-04-04T14:15:13.000Z</published>
    <updated>2024-04-04T14:34:35.057Z</updated>
    
    <content type="html"><![CDATA[<h2 id="步驟"><a href="#步驟" class="headerlink" title="步驟"></a>步驟</h2><ol><li><p>準備工作</p><ol><li>安裝 MetaSpark Studio  <ul><li>前往 MetaSpark 官方網站: <a href="https://spark.meta.com/">https://spark.meta.com/</a> 下載 MetaSpark Studio。</li><li>依照安裝指示完成安裝。</li></ul></li><li>下載臉部模板  <ul><li>前往 MetaSpark 官方教學: <a href="https://spark.meta.com/learn/articles/fundamentals/templates/">https://spark.meta.com/learn/articles/fundamentals/templates/</a>。</li><li>下載需要的臉部模板。</li></ul></li><li>準備素材  <ul><li>準備好要使用的素材，例如圖片、GIF 動畫、3D 模型等。</li></ul></li></ol></li><li><p>製作特效</p><ol><li>建立專案  <ul><li>打開 MetaSpark Studio。</li><li>點擊 File &gt; New &gt; Project。</li><li>在 Project Name 欄位輸入專案名稱。</li><li>點擊 Create。</li></ul></li><li>加入 Face Tracker  <ul><li>在 Scene 檢視窗中，點擊 Hierarchy 面板的 Create 按鈕。</li><li>選擇 AR &gt; Face Tracker。</li><li>將 Face Tracker 拖曳到 Scene 檢視窗中。</li></ul></li><li>加入 Face Mesh  <ul><li>在 Scene 檢視窗中，點擊 Hierarchy 面板的 Create 按鈕。</li><li>選擇 Mesh &gt; Face Mesh。</li><li>將 Face Mesh 拖曳到 Scene 檢視窗中。</li></ul></li><li>加入 Plane  <ul><li>在 Scene 檢視窗中，點擊 Hierarchy 面板的 Create 按鈕。</li><li>選擇 3D Object &gt; Plane。</li><li>將 Plane 拖曳到 Scene 檢視窗中。</li></ul></li></ol></li><li><p>應用特效</p><ol><li>簡單的圖片特效  <ul><li>將圖片拖曳到 Plane 的 Material 屬性中的 Albedo 貼圖欄位。</li><li>調整 Plane 的大小和位置。</li><li>在 Material 檢視窗中，調整圖片的材質屬性，例如透明度、顏色等。</li></ul></li><li>動畫特效  <ul><li>將 GIF 動畫拖曳到 Plane 的 Material 屬性中的 Albedo 貼圖欄位。</li><li>在 Material 檢視窗中，點擊 Shader 屬性中的 Edit 按鈕。</li><li>在 Shader 編輯器中，找到 Main 函數。</li><li>在 Main 函數中添加以下程式碼：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 播放動畫</span><br><span class="line">_MainTex.uv.y += Time.deltaTime * _AnimSpeed;</span><br></pre></td></tr></table></figure></li><li>將 _AnimSpeed 屬性設為動畫的播放速度。</li></ul></li><li>3D 模型特效  <ul><li>將 3D 模型匯入到 MetaSpark Studio。</li><li>將 3D 模型拖曳到 Scene 檢視窗中。</li><li>調整 3D 模型的大小和位置。</li><li>在 Material 檢視窗中，設定 3D 模型的材質屬性，例如顏色、紋理等。</li></ul></li></ol></li><li><p>發布特效</p><ol><li>上傳特效  <ul><li>在 Meta Studio 中登入您的 Facebook 帳號。</li><li>點擊 Create &gt; Spark AR Effect。</li><li>在 Effect Name 欄位輸入特效名稱。</li><li>在 Description 欄位輸入特效描述。</li><li>在 Categories 欄位選擇特效類別。</li><li>將 Spark AR 專案匯出為 .zip 檔案。</li><li>將 .zip 檔案上傳到 Meta Studio。</li></ul></li><li>填寫資訊  <ul><li>在 Effect Name 欄位輸入特效名稱。</li><li>在 Description 欄位輸入特效描述。</li><li>在 Tags 欄位輸入特效標籤。</li><li>在 Thumbnail 欄位上傳特效縮圖。</li></ul></li><li>提交審核  <ul><li>點擊 Submit for Review。</li><li>IG 團隊會在 24 小時內審核你的特效。</li></ul></li></ol></li></ol><h2 id="作品"><a href="#作品" class="headerlink" title="作品:"></a>作品:</h2><img src="/2024/04/04/meta-spark/image.png" class="" title="作品"><img src="/2024/04/04/meta-spark/image2.png" class="" title="QR">]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;步驟&quot;&gt;&lt;a href=&quot;#步驟&quot; class=&quot;headerlink&quot; title=&quot;步驟&quot;&gt;&lt;/a&gt;步驟&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;準備工作&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;安裝 MetaSpark Studio  &lt;ul&gt;
&lt;li&gt;前往 MetaSpark </summary>
      
    
    
    
    <category term="AR" scheme="https://timtimtimchen.github.io/categories/AR/"/>
    
    
    <category term="meta spark" scheme="https://timtimtimchen.github.io/tags/meta-spark/"/>
    
    <category term="AR/VR" scheme="https://timtimtimchen.github.io/tags/AR-VR/"/>
    
  </entry>
  
  <entry>
    <title>youtube-summary</title>
    <link href="https://timtimtimchen.github.io/2024/04/04/youtube-summary/"/>
    <id>https://timtimtimchen.github.io/2024/04/04/youtube-summary/</id>
    <published>2024-04-03T17:32:34.000Z</published>
    <updated>2024-04-03T18:19:21.900Z</updated>
    
    <content type="html"><![CDATA[<h1 id="youtube摘要"><a href="#youtube摘要" class="headerlink" title="youtube摘要"></a>youtube摘要</h1><h2 id="輸入影片網址即可摘要內容"><a href="#輸入影片網址即可摘要內容" class="headerlink" title="輸入影片網址即可摘要內容"></a>輸入影片網址即可摘要內容</h2><p><a href="https://github.com/Timtimtimchen/youtube-embedding-Summary">專案程式碼</a></p><p><em><strong>如要使用請在上方網址’github’後面加上’tocolab’</strong></em></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;youtube摘要&quot;&gt;&lt;a href=&quot;#youtube摘要&quot; class=&quot;headerlink&quot; title=&quot;youtube摘要&quot;&gt;&lt;/a&gt;youtube摘要&lt;/h1&gt;&lt;h2 id=&quot;輸入影片網址即可摘要內容&quot;&gt;&lt;a href=&quot;#輸入影片網址即可摘要內容&quot;</summary>
      
    
    
    
    <category term="AI" scheme="https://timtimtimchen.github.io/categories/AI/"/>
    
    
    <category term="embedding" scheme="https://timtimtimchen.github.io/tags/embedding/"/>
    
    <category term="youtube" scheme="https://timtimtimchen.github.io/tags/youtube/"/>
    
    <category term="pinecone" scheme="https://timtimtimchen.github.io/tags/pinecone/"/>
    
  </entry>
  
  <entry>
    <title>video-retalking-RVC-BossGPT-SoVITS</title>
    <link href="https://timtimtimchen.github.io/2024/04/04/video-retalking-RVC-BossGPT-SoVITS/"/>
    <id>https://timtimtimchen.github.io/2024/04/04/video-retalking-RVC-BossGPT-SoVITS/</id>
    <published>2024-04-03T17:12:32.000Z</published>
    <updated>2024-04-03T18:20:32.771Z</updated>
    
    <content type="html"><![CDATA[<h1 id="RVC-Boss-GPT-SoVITS-語音合成模型"><a href="#RVC-Boss-GPT-SoVITS-語音合成模型" class="headerlink" title="RVC-Boss&#x2F;GPT-SoVITS 語音合成模型"></a>RVC-Boss&#x2F;GPT-SoVITS 語音合成模型</h1><p><a href="https://github.com/Timtimtimchen/video-retalking-RVC-BossGPT-SoVITS"><strong>程式碼網址</strong></a></p><h2 id="1-初始執行畫面"><a href="#1-初始執行畫面" class="headerlink" title="1.初始執行畫面"></a>1.初始執行畫面</h2><img src="/2024/04/04/video-retalking-RVC-BossGPT-SoVITS/A.png" class="" title="image"><h2 id="2-把音檔放進檔案根目錄"><a href="#2-把音檔放進檔案根目錄" class="headerlink" title="2.把音檔放進檔案根目錄"></a>2.把音檔放進檔案根目錄</h2><img src="/2024/04/04/video-retalking-RVC-BossGPT-SoVITS/b.png" class="" title="image"><h2 id="3-設定變數"><a href="#3-設定變數" class="headerlink" title="3.設定變數"></a>3.設定變數</h2><h4 id="1-過濾人聲音"><a href="#1-過濾人聲音" class="headerlink" title="1.過濾人聲音"></a>1.過濾人聲音</h4><h4 id="2-分割音檔"><a href="#2-分割音檔" class="headerlink" title="2.分割音檔"></a>2.分割音檔</h4><h4 id="3-音檔位置"><a href="#3-音檔位置" class="headerlink" title="3.音檔位置"></a>3.音檔位置</h4><img src="/2024/04/04/video-retalking-RVC-BossGPT-SoVITS/C.png" class="" title="image"><h2 id="4-分割音檔合成list"><a href="#4-分割音檔合成list" class="headerlink" title="4.分割音檔合成list"></a>4.分割音檔合成list</h2><p>list位置在框內位置 可自訂</p><img src="/2024/04/04/video-retalking-RVC-BossGPT-SoVITS/D.png" class="" title="image"><h2 id="5-Speech-to-text-proofreading-tool"><a href="#5-Speech-to-text-proofreading-tool" class="headerlink" title="5.Speech to text proofreading tool"></a>5.Speech to text proofreading tool</h2><img src="/2024/04/04/video-retalking-RVC-BossGPT-SoVITS/e.png" class="" title="image"><h2 id="6-終端給WebUI網址"><a href="#6-終端給WebUI網址" class="headerlink" title="6.終端給WebUI網址"></a>6.終端給WebUI網址</h2><p>確認沒問題就可關閉網頁</p><h2 id="7-第二個頁面-1-gtp-sovits-TTS"><a href="#7-第二個頁面-1-gtp-sovits-TTS" class="headerlink" title="7.第二個頁面(1-gtp-sovits-TTS)"></a>7.第二個頁面(1-gtp-sovits-TTS)</h2><img src="/2024/04/04/video-retalking-RVC-BossGPT-SoVITS/f.png" class="" title="image"><p>設置實驗名也就是模型名，不要有中文！然後第一個輸入的是標註文件路徑，注意是文件路徑！示例：&#x2F;content&#x2F;GPT-SoVITS&#x2F;output&#x2F;asr_opt&#x2F;slicer_opt.list 注意後面的文件名必須要輸進去！打不開就再三檢查路徑是否正確！必須要有.list的後綴！！！第二個輸入的是切分音頻文件夾路徑 示例：&#x2F;content&#x2F;GPT-SoVITS&#x2F;output&#x2F;slicer_opt。注意複製的路徑都不能有引號！！！千萬不能有引號！然後點一鍵三連。結束 &#x2F;content&#x2F;GPT-SoVITS&#x2F;logs 裡會有檔案 沒有就是錯</p><h2 id="訓練-1B-Fine-tuned-training"><a href="#訓練-1B-Fine-tuned-training" class="headerlink" title="訓練(1B-Fine-tuned training)"></a>訓練(1B-Fine-tuned training)</h2><p>點進 1B-Fine-tuned training 兩個按鈕都按 </p><img src="/2024/04/04/video-retalking-RVC-BossGPT-SoVITS/g.png" class="" title="image"><p>如報錯就是gpu size要改</p><h2 id="1c-inference"><a href="#1c-inference" class="headerlink" title="1c-inference"></a>1c-inference</h2><img src="/2024/04/04/video-retalking-RVC-BossGPT-SoVITS/h.png" class="" title="image"><p>GPT models list 跟 SoVITS models list 都要選數字大的 如果沒選項點refresh 再來 Open TTS inference WEBUI打勾</p><h2 id="終端給新網頁-雙擊"><a href="#終端給新網頁-雙擊" class="headerlink" title="終端給新網頁 雙擊"></a>終端給新網頁 雙擊</h2><img src="/2024/04/04/video-retalking-RVC-BossGPT-SoVITS/i.png" class="" title="image"><p>給十秒內的影片並給影片中文內容<br> 再來給他你想讓他講的句子 按start<br> 音檔生成在右手邊</p><h2 id="加video-retalking使影片更生動"><a href="#加video-retalking使影片更生動" class="headerlink" title="加video-retalking使影片更生動"></a>加video-retalking使影片更生動</h2><h3 id="作品"><a href="#作品" class="headerlink" title="作品:"></a>作品:</h3><p><video controls src="./aa.mp4" title="Title"></video></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;RVC-Boss-GPT-SoVITS-語音合成模型&quot;&gt;&lt;a href=&quot;#RVC-Boss-GPT-SoVITS-語音合成模型&quot; class=&quot;headerlink&quot; title=&quot;RVC-Boss&amp;#x2F;GPT-SoVITS 語音合成模型&quot;&gt;&lt;/a&gt;RVC</summary>
      
    
    
    
    <category term="AI" scheme="https://timtimtimchen.github.io/categories/AI/"/>
    
    
    <category term="video-retalking" scheme="https://timtimtimchen.github.io/tags/video-retalking/"/>
    
    <category term="RVC-BossGPT-SoVITS" scheme="https://timtimtimchen.github.io/tags/RVC-BossGPT-SoVITS/"/>
    
  </entry>
  
  <entry>
    <title>llama-index</title>
    <link href="https://timtimtimchen.github.io/2024/04/01/llama-index/"/>
    <id>https://timtimtimchen.github.io/2024/04/01/llama-index/</id>
    <published>2024-04-01T14:23:06.000Z</published>
    <updated>2024-05-04T18:25:33.595Z</updated>
    
    <content type="html"><![CDATA[<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ol><li><p><strong>摘要提取</strong>：通過查詢摘要來對 1GB 的數據集進行總結。LLamaIndex 可以檢索相關節點並合成摘要。</p></li><li><p><strong>位置實體提取</strong>：通過查詢從數據集中提取類似位置的實體來進行位置查詢。</p></li><li><p><strong>問答記錄</strong>：通過查詢問題的答案來記錄問答。</p></li><li><p><strong>聊天機器人增強</strong>：通過查詢對用戶消息的回應來增強數據聊天機器人。</p></li><li><p><strong>結構化分析</strong>：使用 LLamaIndex 可以進行對結構化數據，如表格、CSV 文件和數據庫等的結構化分析。</p></li></ol><h2 id="步驟流程"><a href="#步驟流程" class="headerlink" title="步驟流程"></a>步驟流程</h2><img src="/2024/04/01/llama-index/1.webp" class="" title="Alt text"><p><em><strong>關鍵步驟是將數據加載文件，解析為節點</strong></em></p><img src="/2024/04/01/llama-index/2.webp" class="" title="Alt text"><p><em><strong>在文件&#x2F;節點上構建索引</strong></em></p><img src="/2024/04/01/llama-index/3.webp" class="" title="Alt text"><p><em><strong>查詢索引以檢索相關節點然後解析響應對象。索引也可以持久化並從磁盤重新加載。</strong></em></p><img src="/2024/04/01/llama-index/4.webp" class="" title="Alt text"><h2 id="Branch"><a href="#Branch" class="headerlink" title="Branch"></a>Branch</h2><ul><li>main: 因為一開始是用python 寫的，所以在main裡面為<code>python</code>架<code>fastapi</code>來做問答</li><li>Typescript: 後來轉接ts的 <code>api</code> 版本，可以用來客製化api</li><li>Typescript-chat: 嫁接開源專案 <a href="https://github.com/run-llama/chat-llamaindex">https://github.com/run-llama/chat-llamaindex</a> 的版本，為目前開發主力</li></ul><h3 id="安裝依賴"><a href="#安裝依賴" class="headerlink" title="安裝依賴"></a>安裝依賴</h3><p>node 版本: <a href="https://nodejs.org/">NodeJS</a> 18</p><ul><li><p>install pnpm global</p>  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g pnpm</span><br></pre></td></tr></table></figure></li><li><p>設定環境檔，非<code>linux</code>直接複製一份 <code>.env.template</code> 取名為<code>.env.development.local</code>即可</p>  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> .env.template .env.development.local</span><br></pre></td></tr></table></figure></li><li><p>調整 <code>.env.development.local</code> 參數</p></li><li><p>本地起服務</p>  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pnpm install</span><br><span class="line">pnpm dev</span><br></pre></td></tr></table></figure></li><li><p>這邊其實也可以使用npm<br>詳細指令參考 <code>package.json</code></p></li></ul><h3 id="本地知識庫"><a href="#本地知識庫" class="headerlink" title="本地知識庫"></a>本地知識庫</h3><p>啟用知識庫步驟</p><ol><li><code>./datasource</code> 裡面建立資料夾，取名<code>&lt;datasource-name&gt;</code>，然後把檔案放進去<img src="/2024/04/01/llama-index/img.png" class="" title="img.png"></li><li>生成向量檔(<strong>注意</strong> 環境須確定有openai key)</li><li>生成向量指令 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pnpm run generate &lt;datasource-name&gt;</span><br></pre></td></tr></table></figure></li><li><code>&lt;datasource-name&gt;</code>就會是最後生成出來的檔案夾，會放在<code>cache</code>內，一般成功會有三個檔案<img src="/2024/04/01/llama-index/img_1.png" class="" title="img_1.png"></li></ol><h3 id="default-bot"><a href="#default-bot" class="headerlink" title="default bot"></a>default bot</h3><p>進入 <code>bot.data.ts</code> 依照template 做修改<br>若要使用建好的資料集則直接將datasource 換成 <code>&lt;datasource-name&gt;</code></p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">[</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    id<span class="punctuation">:</span> <span class="string">&quot;3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    avatar<span class="punctuation">:</span> <span class="string">&quot;1f4da&quot;</span><span class="punctuation">,</span></span><br><span class="line">    name<span class="punctuation">:</span> <span class="string">&quot;German Basic Law Expert&quot;</span><span class="punctuation">,</span></span><br><span class="line">    botHello<span class="punctuation">:</span> <span class="string">&quot;Hello! How can I assist you today?&quot;</span><span class="punctuation">,</span></span><br><span class="line">    context<span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        role<span class="punctuation">:</span> <span class="string">&quot;system&quot;</span><span class="punctuation">,</span></span><br><span class="line">        content<span class="punctuation">:</span> TEMPLATE(</span><br><span class="line">        <span class="string">&quot;Lawyer specialized in the basic law of Germany&quot;</span></span><br><span class="line">        )</span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    modelConfig<span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      model<span class="punctuation">:</span> <span class="string">&quot;azure-gpt-3.5-turbo&quot;</span><span class="punctuation">,</span></span><br><span class="line">      temperature<span class="punctuation">:</span> <span class="number">0.1</span><span class="punctuation">,</span></span><br><span class="line">      maxTokens<span class="punctuation">:</span> <span class="number">1000</span><span class="punctuation">,</span></span><br><span class="line">      sendMemory<span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    readOnly<span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    datasource<span class="punctuation">:</span> <span class="string">&quot;basic_law_germany&quot;</span><span class="punctuation">,</span></span><br><span class="line">    hideContext<span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;功能&quot;&gt;&lt;a href=&quot;#功能&quot; class=&quot;headerlink&quot; title=&quot;功能&quot;&gt;&lt;/a&gt;功能&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;摘要提取&lt;/strong&gt;：通過查詢摘要來對 1GB 的數據集進行總結。LLamaIndex 可以檢索相關</summary>
      
    
    
    
    <category term="AI" scheme="https://timtimtimchen.github.io/categories/AI/"/>
    
    
    <category term="embedding" scheme="https://timtimtimchen.github.io/tags/embedding/"/>
    
    <category term="Azure-Openai" scheme="https://timtimtimchen.github.io/tags/Azure-Openai/"/>
    
    <category term="RAG" scheme="https://timtimtimchen.github.io/tags/RAG/"/>
    
  </entry>
  
  <entry>
    <title>Qrant</title>
    <link href="https://timtimtimchen.github.io/2024/04/01/Qrant/"/>
    <id>https://timtimtimchen.github.io/2024/04/01/Qrant/</id>
    <published>2024-04-01T13:52:38.000Z</published>
    <updated>2024-04-13T17:10:09.539Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Qdrant-向量資料庫"><a href="#Qdrant-向量資料庫" class="headerlink" title="Qdrant 向量資料庫"></a>Qdrant 向量資料庫</h1><h2 id="用途"><a href="#用途" class="headerlink" title="用途"></a>用途</h2><p>儲存切分後的文字及向量供可反覆查詢</p><h2 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h2><h3 id="pull"><a href="#pull" class="headerlink" title="pull"></a>pull</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker pull qdrant/qdrant</span><br></pre></td></tr></table></figure><h3 id="run"><a href="#run" class="headerlink" title="run"></a>run</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -p 6333:6333 \</span><br><span class="line">    -v $(pwd)/path/to/data:/qdrant/storage \</span><br><span class="line">    qdrant/qdrant</span><br></pre></td></tr></table></figure><h3 id="run-costume-config"><a href="#run-costume-config" class="headerlink" title="run costume config"></a>run costume config</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -p 6333:6333 \</span><br><span class="line">    -v $(pwd)/path/to/data:/qdrant/storage \</span><br><span class="line">    -v $(pwd)/path/to/custom_config.yaml:/qdrant/config/custom_config.yaml \</span><br><span class="line">    qdrant/qdrant \</span><br><span class="line">    ./qdrant --config-path config/custom_config.yaml</span><br></pre></td></tr></table></figure><h2 id="Docker-compose"><a href="#Docker-compose" class="headerlink" title="Docker compose"></a>Docker compose</h2><h3 id="config"><a href="#config" class="headerlink" title="config"></a>config</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">qdrant:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">qdrant/qdrant:latest</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">qdrant</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">6333</span><span class="string">:6333</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">6334</span><span class="string">:6334</span></span><br><span class="line">    <span class="attr">expose:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">6333</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">6334</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">6335</span></span><br><span class="line">    <span class="attr">configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">source:</span> <span class="string">qdrant_config</span></span><br><span class="line">        <span class="attr">target:</span> <span class="string">/qdrant/config/production.yaml</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./qdrant_data:/qdrant_data</span></span><br><span class="line"></span><br><span class="line"><span class="attr">configs:</span></span><br><span class="line">  <span class="attr">qdrant_config:</span></span><br><span class="line">    <span class="attr">content:</span> <span class="string">|</span></span><br><span class="line">      <span class="attr">log_level:</span> <span class="string">INFO</span>        </span><br></pre></td></tr></table></figure><h3 id="local-build"><a href="#local-build" class="headerlink" title="local build"></a>local build</h3><p>可以在<code>/config/qdrant</code>中的 <code>config.ymal</code>中找到</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">api_key:</span> <span class="string">your_secret_api_key_here</span></span><br></pre></td></tr></table></figure><p>之後build 一個自己的image</p><h3 id="use-default"><a href="#use-default" class="headerlink" title="use default"></a>use default</h3><p>如果要使用default image 來做更改，也可以</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -p 6333:6333 \</span><br><span class="line">    -v $(pwd)/path/to/data:/qdrant/storage \</span><br><span class="line">    -v $(pwd)/path/to/custom_config.yaml:/qdrant/config/production.yaml \</span><br><span class="line">    qdrant/qdrant</span><br></pre></td></tr></table></figure><h3 id="run-1"><a href="#run-1" class="headerlink" title="run"></a>run</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker compose up -d</span><br></pre></td></tr></table></figure><h2 id="Sql-使用"><a href="#Sql-使用" class="headerlink" title="Sql 使用"></a>Sql 使用</h2><h3 id="創建collection"><a href="#創建collection" class="headerlink" title="創建collection"></a>創建collection</h3><p>1536 是 openai embedding 的維度</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -X PUT http://localhost:6333/collections/rd \</span><br><span class="line">  -H &#x27;Content-Type: application/json&#x27; \</span><br><span class="line">  --data-raw &#x27;&#123;</span><br><span class="line">    &quot;vectors&quot;: &#123;</span><br><span class="line">      &quot;size&quot;: 1536,</span><br><span class="line">      &quot;distance&quot;: &quot;Cosine&quot;</span><br><span class="line">    &#125; </span><br><span class="line">  &#125;&#x27;</span><br></pre></td></tr></table></figure><h3 id="創建包含-apikey-的collection"><a href="#創建包含-apikey-的collection" class="headerlink" title="創建包含 apikey 的collection"></a>創建包含 apikey 的collection</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -X PUT http://localhost:6333/collections/eip   -H <span class="string">&#x27;Content-Type: application/json&#x27;</span> -H <span class="string">&#x27;Authorization: Bearer api-key&#x27;</span>   --data-raw <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">    &quot;vectors&quot;: &#123;</span></span><br><span class="line"><span class="string">      &quot;size&quot;: 1536,</span></span><br><span class="line"><span class="string">      &quot;distance&quot;: &quot;Cosine&quot;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="看資訊"><a href="#看資訊" class="headerlink" title="看資訊"></a>看資訊</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -X GET http://localhost:6333/collections/your-collection-name</span><br></pre></td></tr></table></figure><h3 id="移除Collection"><a href="#移除Collection" class="headerlink" title="移除Collection"></a>移除Collection</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -X DELETE http://localhost:6333/collections/your-collection-name</span><br></pre></td></tr></table></figure><h1 id="qdrant介面操作-link"><a href="#qdrant介面操作-link" class="headerlink" title="qdrant介面操作#link"></a>qdrant介面操作#<a href="http://ai.zerozero.com.tw:6333/dashboard">link</a></h1><img src="/2024/04/01/Qrant/1.png" class="" title="qdrant介面"><h2 id="1-左邊欄位點console輸入以下程式碼"><a href="#1-左邊欄位點console輸入以下程式碼" class="headerlink" title="1.左邊欄位點console輸入以下程式碼"></a>1.左邊欄位點console輸入以下程式碼</h2><img src="/2024/04/01/Qrant/2.png" class="" title="操作"><h3 id="qdrant增刪查語法"><a href="#qdrant增刪查語法" class="headerlink" title="qdrant增刪查語法"></a>qdrant增刪查語法</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> collections<span class="operator">/</span>ec</span><br><span class="line"></span><br><span class="line">PUT collections<span class="operator">/</span>ec</span><br><span class="line">&#123;</span><br><span class="line">   &quot;vectors&quot;: &#123;</span><br><span class="line">      &quot;size&quot;: <span class="number">1536</span>,</span><br><span class="line">      &quot;distance&quot;: &quot;Cosine&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">GET</span> collections<span class="operator">/</span>ec</span><br></pre></td></tr></table></figure><ul><li>DELETE 刪除ec向量集</li><li>PUT  創建 1536是向量維度</li><li>GET  查詢</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Qdrant-向量資料庫&quot;&gt;&lt;a href=&quot;#Qdrant-向量資料庫&quot; class=&quot;headerlink&quot; title=&quot;Qdrant 向量資料庫&quot;&gt;&lt;/a&gt;Qdrant 向量資料庫&lt;/h1&gt;&lt;h2 id=&quot;用途&quot;&gt;&lt;a href=&quot;#用途&quot; class=&quot;</summary>
      
    
    
    
    <category term="AI" scheme="https://timtimtimchen.github.io/categories/AI/"/>
    
    
    <category term="vector" scheme="https://timtimtimchen.github.io/tags/vector/"/>
    
  </entry>
  
  <entry>
    <title>Flowise</title>
    <link href="https://timtimtimchen.github.io/2024/04/01/Flowise/"/>
    <id>https://timtimtimchen.github.io/2024/04/01/Flowise/</id>
    <published>2024-04-01T13:21:43.000Z</published>
    <updated>2024-04-13T17:01:46.480Z</updated>
    
    <content type="html"><![CDATA[<h1 id="部屬"><a href="#部屬" class="headerlink" title="部屬"></a>部屬</h1><h2 id="官方部屬文件"><a href="#官方部屬文件" class="headerlink" title="官方部屬文件"></a>官方部屬文件</h2><h3 id="github"><a href="#github" class="headerlink" title="github"></a>github</h3><p><a href="https://github.com/FlowiseAI/Flowise">https://github.com/FlowiseAI/Flowise</a></p><h3 id="docs"><a href="#docs" class="headerlink" title="docs"></a>docs</h3><p><a href="https://docs.flowiseai.com/">https://docs.flowiseai.com/</a></p><h2 id="環境"><a href="#環境" class="headerlink" title="環境"></a>環境</h2><h3 id="測試機"><a href="#測試機" class="headerlink" title="測試機"></a>測試機</h3><p>ai 雲端測試機: <a href="http://10.0.194.20:4000/">http://10.0.194.20:4000/</a><br>local ai 主機: <a href="http://10.200.21.47:3000/">http://10.200.21.47:3000/</a></p><p>部屬雲端是為了接入eip，因為local ai 主機會有網域問題</p><h3 id="正式機"><a href="#正式機" class="headerlink" title="正式機"></a>正式機</h3><p>待創建</p><h2 id="部屬方法"><a href="#部屬方法" class="headerlink" title="部屬方法"></a>部屬方法</h2><ol><li><p>clone public repo</p> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/FlowiseAI/Flowise.git</span><br></pre></td></tr></table></figure></li><li><p>安裝docker 及 docker compose<br> 這部分可參考官方說明<a href="https://docs.docker.com/engine/install/">https://docs.docker.com/engine/install/</a></p></li><li><p>cd docker and copy .env.template</p> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd docker &amp;&amp;</span><br><span class="line">cp .env.example .env</span><br></pre></td></tr></table></figure></li><li><p>更改<code>.env</code><br> 主要要更改的部分有</p><ul><li>FILE_SIZE_LIMIT: 避免embedding pdf 檔案過大</li><li>USERNAME &#x2F; PASSWORD</li><li>CORS相關設定，若要嵌入至其他網頁時若沒有設定會被擋</li><li>DATABASE 如果有要做連接資料須寫在這邊 <figure class="highlight text"><table><tr><td class="code"><pre><span class="line">PORT=4000</span><br><span class="line">DATABASE_PATH=/root/.flowise</span><br><span class="line">APIKEY_PATH=/root/.flowise</span><br><span class="line">SECRETKEY_PATH=/root/.flowise</span><br><span class="line">LOG_PATH=/root/.flowise/logs</span><br><span class="line">BLOB_STORAGE_PATH=/root/.flowise/storage</span><br><span class="line"></span><br><span class="line">CORS_ORIGINS=&quot;*&quot;</span><br><span class="line">IFRAME_ORIGINS=&quot;*&quot;</span><br><span class="line">EMBEDDING_ORIGINS=&quot;*&quot;</span><br><span class="line"></span><br><span class="line"># NUMBER_OF_PROXIES= 1</span><br><span class="line"></span><br><span class="line"># DATABASE_TYPE=postgres</span><br><span class="line"># DATABASE_PORT=&quot;&quot;</span><br><span class="line"># DATABASE_HOST=&quot;&quot;</span><br><span class="line"># DATABASE_NAME=&quot;flowise&quot;</span><br><span class="line"># DATABASE_USER=&quot;&quot;</span><br><span class="line"># DATABASE_PASSWORD=&quot;&quot;</span><br><span class="line"># DATABASE_SSL=true</span><br><span class="line"># DATABASE_SSL_KEY_BASE64=&lt;Self signed certificate in BASE64&gt;</span><br><span class="line"></span><br><span class="line">FLOWISE_USERNAME=&quot;&quot;</span><br><span class="line">FLOWISE_PASSWORD=&quot;&quot;</span><br><span class="line"># FLOWISE_SECRETKEY_OVERWRITE=myencryptionkey</span><br><span class="line">FLOWISE_FILE_SIZE_LIMIT=200mb</span><br><span class="line"># DEBUG=true</span><br><span class="line"># LOG_LEVEL=debug (error | warn | info | verbose | debug)</span><br><span class="line"># TOOL_FUNCTION_BUILTIN_DEP=crypto,fs</span><br><span class="line"># TOOL_FUNCTION_EXTERNAL_DEP=moment,lodash</span><br><span class="line"></span><br><span class="line"># LANGCHAIN_TRACING_V2=true</span><br><span class="line"># LANGCHAIN_ENDPOINT=https://api.smith.langchain.com</span><br><span class="line"># LANGCHAIN_API_KEY=your_api_key</span><br><span class="line"># LANGCHAIN_PROJECT=your_project</span><br><span class="line"></span><br><span class="line"># DISABLE_FLOWISE_TELEMETRY=true</span><br></pre></td></tr></table></figure></li></ul></li><li><p>起<code>docker compose</code></p> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker compose up -d</span><br></pre></td></tr></table></figure><p>起來之後就會在設定的port號run起來了</p></li></ol><h1 id="FLOWISE操作-link"><a href="#FLOWISE操作-link" class="headerlink" title="FLOWISE操作#link"></a>FLOWISE操作#<a href = "https://ai.zerozero.com.tw:4000/">link</a></h1><p><em><strong>機密資料一律用azure openai</strong></em></p><img src="/2024/04/01/Flowise/1.png" class="" title="photo"><h2 id="1-文檔embeding進qdrant-store-vector"><a href="#1-文檔embeding進qdrant-store-vector" class="headerlink" title="1.文檔embeding進qdrant(store vector)"></a>1.文檔embeding進qdrant(store vector)</h2><h3 id="先切分上傳文檔-並轉換為向量-丟進vector資料庫"><a href="#先切分上傳文檔-並轉換為向量-丟進vector資料庫" class="headerlink" title="先切分上傳文檔 並轉換為向量 丟進vector資料庫"></a>先切分上傳文檔 並轉換為向量 丟進vector資料庫</h3><img src="/2024/04/01/Flowise/2.png" class="" title="photo"><p>左上藍色加號可選擇方塊做連線</p><ol><li>chunk size是切是切分大小</li><li>chunk overlap 重疊部分</li><li>Connect Credential 輸入或新增openai金鑰</li><li>connect credential 輸入qrant API KEY</li><li>Qrant server url 你Qdrant連線的url</li><li>collection name 你設定的qdrant collection名子</li><li>上傳要切分送qdrant的檔案</li></ol><p>接好線後 先按右上方綠色按鈕 將向量丟進qdrant</p><h2 id="2-查詢-for-EC"><a href="#2-查詢-for-EC" class="headerlink" title="2.查詢(for EC)"></a>2.查詢(for EC)</h2><h3 id="將query轉成vector-並做相似度查詢-將相近向量的語句-給ai作生成"><a href="#將query轉成vector-並做相似度查詢-將相近向量的語句-給ai作生成" class="headerlink" title="將query轉成vector 並做相似度查詢 將相近向量的語句 給ai作生成"></a>將query轉成vector 並做相似度查詢 將相近向量的語句 給ai作生成</h3><img src="/2024/04/01/Flowise/3.png" class="" title="photo"><ol><li>Connect Credential 輸入或新增openai金鑰</li><li>model name 一律gpt35</li><li>Qrant server url 你Qdrant連線的url</li><li>collection name 你設定的qdrant collection名子</li><li>0~1 “temperature”（溫度）是一個用來控制生成文本的隨機性的參數。溫度參數影響模型選擇下一個詞的概率分布。溫度的值通常設定在0到1之間，但也可以超過這個範圍。當溫度設置為較低的值（如0或接近0）時，模型生成的文本將更加確定性和重複性，因為它更傾向於選擇概率最高的詞。這導致生成的文本較為保守，變化較少。<br>當溫度設置為較高的值（如1或更高）時，模型在選擇下一個詞時會考慮到更廣泛的選項，這使得生成的文本更加多樣化和不可預測。</li></ol><p><strong>接完線點按保存 按右上角紫色圖標即可開始問答</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;部屬&quot;&gt;&lt;a href=&quot;#部屬&quot; class=&quot;headerlink&quot; title=&quot;部屬&quot;&gt;&lt;/a&gt;部屬&lt;/h1&gt;&lt;h2 id=&quot;官方部屬文件&quot;&gt;&lt;a href=&quot;#官方部屬文件&quot; class=&quot;headerlink&quot; title=&quot;官方部屬文件&quot;&gt;&lt;/a&gt;官</summary>
      
    
    
    
    <category term="AI" scheme="https://timtimtimchen.github.io/categories/AI/"/>
    
    
    <category term="embedding" scheme="https://timtimtimchen.github.io/tags/embedding/"/>
    
    <category term="flowise" scheme="https://timtimtimchen.github.io/tags/flowise/"/>
    
    <category term="qrant" scheme="https://timtimtimchen.github.io/tags/qrant/"/>
    
  </entry>
  
</feed>
